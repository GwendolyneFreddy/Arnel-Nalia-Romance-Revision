
// Courtesy of Argent77. Thanks!!!

/**
 * Returns the first available script block containing the specified search string (as regular expression).
 * INT_VAR start_offset   Optional offset where to start searching. (Default: 0)
 * INT_VAR reverse        Specify zero to apply a forward search, or non-zero to apply a backwards seearch from "start_offset". (Default: 0)
 * STR_VAR search_regexp  The search string as regular expression. Must be non-empty.
 * RET script_block       The full script block as string when found, empty string otherwise.
 * RET start_offset       Start offset of the script block when found, -1 otherwise.
 * RET end_offset         End offset (directly behind closing "END") of the script block when found, -1 otherwise.
 */
DEFINE_PATCH_FUNCTION GET_SCRIPT_BLOCK
INT_VAR
  start_offset  = 0
  reverse       = 0
STR_VAR
  search_regexp = ~~
RET
  script_block
  start_offset
  end_offset
BEGIN
  SET offset = start_offset
  PATCH_IF (offset < 0) BEGIN SET offset = 0 END
  PATCH_IF (offset > BUFFER_LENGTH) BEGIN SET offset = BUFFER_LENGTH END

  TEXT_SPRINT script_block ~~
  SET start_offset = "-1"
  SET end_offset = "-1"

  PATCH_IF (NOT ~%search_regexp%~ STR_EQ ~~) BEGIN
    PATCH_IF (reverse) BEGIN
      SET offset = RINDEX_BUFFER(~%search_regexp%~ offset)
    END ELSE BEGIN
      SET offset = INDEX_BUFFER(~%search_regexp%~ offset)
    END

    PATCH_IF (offset >= 0) BEGIN
      SET ofsStart = RINDEX_BUFFER(~^IF$~ offset)
      PATCH_IF (ofsStart >= 0) BEGIN
        SET ofsEnd = INDEX_BUFFER(~^END$~ offset)
        PATCH_IF (ofsEnd >= 0) BEGIN
          SET ofsEnd += 3
          READ_ASCII ofsStart script_block (ofsEnd - ofsStart)
          SET start_offset = ofsStart
          SET end_offset = ofsEnd
        END
      END
    END
  END
END
